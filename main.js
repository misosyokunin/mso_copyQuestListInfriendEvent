javascript:(async()=>{
"use strict";

/*
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉÔº≠Ôº≥ÔºØÔºø„Éû„Ç±„Éó„É¨Ëá™ÂãïÂÖ•Êú≠‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
Developer:
	È≠öÈ†≠Áî∑Ôºàhttps://minesweeper.online/ja/player/16842796 Ôºâ
Writing:
	È≠öÈ†≠Áî∑Ôºàhttps://minesweeper.online/ja/player/16842796 Ôºâ

Ë¥à„Çå„Çã„ÇØ„Ç®„Çπ„Éà„Çí„ÅÑ„Å°„ÅÑ„Å°„Ç≥„Éî„Éö„Åô„Çã„ÅÆ„ÅØÈù¢ÂÄí‚Ä¶„ÄÇ
„Å®„ÅÑ„ÅÜ„Çè„Åë„Åß„ÄÅ„ÉÑ„Éº„É´„Çí‰Ωú„Çä„Åæ„Åó„Åü„ÄÇ

=======================================================
„Åì„ÅÆ„ÉÑ„Éº„É´„ÅØMinesweeper.OnlineÊßòÔºàhttps://minesweeper.online/ „ÄÅ‰ª•‰∏ã„ÄåÔº≠Ôº≥ÔºØ„ÄçÔºâ„Çà„ÇäÂÖ¨Ë™ç„ÇíÂèó„Åë„Å¶„ÅÑ„Å™„ÅÑ„ÄÅÈùûÂÖ¨Ë™ç„ÅÆ„ÇÇ„ÅÆ„Åß„Åô„ÄÇ
ÂΩì„Éó„É≠„Ç∞„É©„É†„ÅØ„ÄÅÔº≠Ôº≥ÔºØÊßò„Å®„ÅØ‰∏ÄÂàáÈñ¢‰øÇ„Åî„Åñ„ÅÑ„Åæ„Åõ„Çì„ÅÆ„Åß„ÄÅ„Åì„ÅÆ„Éó„É≠„Ç∞„É©„É†„Å´Èñ¢„Åô„ÇãË≥™Âïè„ÉªÊèêË®ÄÁ≠â„ÅÆÈÄ£Áµ°„ÅØÈ≠öÈ†≠Áî∑Ôºàhttps://minesweeper.online/ja/player/16842796 „ÄÅ‰ª•‰∏ã„ÄåÈ≠ö„ÄçÔºâ„Åæ„Åß„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ
ÂΩì„Éó„É≠„Ç∞„É©„É†„Å´„Å§„ÅÑ„Å¶„ÄÅÔº≠Ôº≥ÔºØÊßò„Å´ÈÄ£Áµ°„Åô„Çã„Åì„Å®„ÅØÁµ∂ÂØæ„Å´„Åó„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ
ÈÅãÂñ∂ËÄÖÊßò‰∏¶„Å≥„Å´„É¶„Éº„Ç∂„ÉºÊßò„Å´„ÅîËø∑ÊÉë„Å´„Å™„Çâ„Å™„ÅÑ„Çà„ÅÜ„Å´Âä™„ÇÅ„Å¶„Åä„Çä„Åæ„Åô„Åå„ÄÅ‰∏á„Åå‰∏Ä„ÅÆ„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åó„Åü„ÇâÂç≥ÂâäÈô§„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇ
=======================================================
*/

/*
ÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºù„Äê‰Ωø„ÅÑÊñπ„ÄëÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºù
„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÇíÂÆüË°å„Åó„Å¶Ë∫´„Çí‰ªª„Åõ„Çã„Å†„Åë„Åß„Åô„ÄÇ

„Åô„Åπ„Å¶„ÅÆ„ÇØ„Ç®„Çπ„Éà„ÇíÊúÄÁü≠1Áßí„ÅßÂèñÂæó„Åó„Åæ„Åô
ÔºàÁí∞Â¢É„Å´„Çà„Å£„Å¶„ÅØ2Áßí‰ª•‰∏äÊéõ„Åã„Çã„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„ÇìÔºâ„ÄÇ
„Çπ„ÇØ„É™„Éó„ÉàÂÆüË°å‰∏≠„ÅØ„ÄÅ„Åß„Åç„Çã„Å†„Åë„Çø„Éñ„ÅÆÈÅ∑Áßª„ÇÑ„Éñ„É©„Ç¶„Ç∂„Çí„Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„Éâ„Å´„Åó„Å™„ÅÑ„Çà„ÅÜ„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

„Å™„Åä„ÄÅ‰ªñË®ÄË™û„Åß„ÇÇÂêå„Åò„Çà„ÅÜ„Å™„Åì„Å®„Åå„Åß„Åç„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ
„Åü„Å†„ÄÅ„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅÆ„Åæ„Åæ„Åß„ÅØÂãï„Åç„Åæ„Åõ„Çì„ÅÆ„Åß„ÄÅÈÅ©ÂÆúÂ§â„Åà„Å¶„Åè„Å†„Åï„ÅÑÔºà„Äåja„Äç„ÇÑÊäΩÂá∫ÊñáË®ÄÔºâ„ÄÇ

*/

/*ÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºù„Äê„Çπ„ÇØ„É™„Éó„ÉàÂÆüË°åÁ¢∫Ë™ç„ÄëÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºùÔºù*/
{
	const TAR_URL = "https://minesweeper.online/ja/friend-quests";
	const TAR_TITLE = "„Ç§„Éô„É≥„Éà„ÇØ„Ç®„Çπ„ÉàÁîªÈù¢";
	if(location.href.includes(TAR_URL)){
		
	}else{
		const result = window.confirm(`${TAR_TITLE}„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ\n${TAR_TITLE}„Å∏È£õ„Å≥„Åæ„Åô„ÅãÔºü\nÔºà„Éö„Éº„Ç∏ÈÅ∑ÁßªÂæå„Å´ÂÜçÂ∫¶„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÔºâ`);
		if(result){
			location.href = TAR_URL;
		}else{
			alert(`${TAR_TITLE}Ôºà${TAR_URL}Ôºâ„ÇíË°®Á§∫„Åï„Åõ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`);
		}
		return;
	}
}


if(document.querySelector("#QuestsBlock > div").textContent.includes("Ë¥à„Çå„Çã„ÇØ„Ç®„Çπ„Éà")){

}else{
	alert("Ë¥à„Çå„Çã„ÇØ„Ç®„Çπ„Éà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ");
	return;
}

const Wait = {
	waits : [],
	num : -1,
	add(){
		return new Promise((resolve) =>{
			this.num++;
			this.waits[this.num] = resolve;
		});
	},
	release(){
		this.waits[this.num]();
		this.waits[this.num] = "";
		this.num--;
	},
	time(sec){
		return new Promise((resolve) =>{
			setTimeout(function(){resolve();}, sec * 1000);
		});
	},
};


let Pagenation = document.querySelector("#QuestsBlock > div").nextElementSibling?.nextElementSibling;
async function updatePageNation(callback){
	Pagenation = document.querySelector("#QuestsBlock > div").nextElementSibling?.nextElementSibling;	/*ÂÜçÂÆöÁæ©*/
	const target = document.body;
	const observer = new MutationObserver(async function (mutations) {
		const tar = mutations[0].target;
/*
					console.log(tar);
*/
		if(tar.classList.contains("pagination")){
			Wait.release();
			Pagenation = document.querySelector("#QuestsBlock > div").nextElementSibling?.nextElementSibling;	/*ÂÜçÂÆöÁæ©*/
			observer.disconnect();
		}
	});
	observer.observe(target, {
		characterData: true,	/*„ÉÜ„Ç≠„Çπ„Éà„Éé„Éº„Éâ„ÅÆÂ§âÂåñ„ÇíÁõ£Ë¶ñ*/
		childList: true,	/*Â≠ê„Éé„Éº„Éâ„ÅÆÂ§âÂåñ„ÇíÁõ£Ë¶ñ*/
		subtree: true,	/*Â≠êÂ≠´„Éé„Éº„Éâ„ÇÇÁõ£Ë¶ñÂØæË±°„Å´Âê´„ÇÅ„Çã*/
	});
	callback();	/*„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥Êìç‰Ωú„ÇíË°å„ÅÜ*/
	await Wait.add();
}
let moveNextPage = function(){
	isLooping = false;
	return true;
};
if(Pagenation?.tagName === "UL"){
	moveNextPage = (async () => {
		const nextButton = Pagenation.querySelector(".next");
		if(nextButton.classList.contains("disabled")){
			isLooping = false;
			return;
		}else{
			const callback = function(){
				nextButton.click();
			};
			await updatePageNation(callback);
		}
	});
	if(Pagenation.querySelector(".first").classList.contains("disabled")){
	}else{
		const callback = function(){
			Pagenation.querySelector(".first").click();
		};
		await updatePageNation(callback);
	}
}else{

}

let pa = [];
function getQuests(){
	const trs = document.querySelectorAll("#QuestsBlock > table:first-of-type > tbody > tr");
	trs.forEach((tr, index) => {
		const td = tr.querySelectorAll("td");
		const detail = (() => {
			let rs = td[1].textContent;
			rs = rs.replace("„ÅÆ„Ç´„Çπ„Çø„É†„Çí", "Ôºà‚ò†üí£%Ôºâ");
			rs = rs.replace(/(„É¨„Éô„É´|„Çµ„Ç§„Ç∫|NG|„Åß|„ÅÆ„Ç≤„Éº„É†„Çí|„ÇØ„É™„Ç¢„Åô„Çã|„ÇíÁ®º„Åê|‰ª•‰∏ä|„Ç≤„Éº„É†„ÅÆÂ†±ÈÖ¨|„ÇíÈõÜ„ÇÅ„Çã|\s|)/g, "");
			return rs;
		})();
		const level = (() => {
			let rs = td[0].textContent;
			if(rs.includes("E")){
			
			}else{
				rs += "_";
			}
			return rs;
		})();
		const ta = [];
		ta.push(pa.length + 1);
		ta.push(level);
		ta.push(detail);
	/*
		ta.push(td[2].textContent);
	*/
		pa.push(`${ta.join("\t")}\n`);
	});
}

let isLooping = true;
while(isLooping){
	getQuests();
	console.log(pa);
	await moveNextPage();
	console.log(isLooping);
};



const wrapper = document.createElement("div");
wrapper.style = "position: fixed; top: 0px; left: 0px; z-index: 999; right: 0px; bottom: 0px; margin: auto; padding: 5%; height: 90%; width: 90%; display: flex; flex-direction: column;";
document.body.append(wrapper);
{
	const textarea = document.createElement("textarea");
	textarea.value = pa.join("");
	textarea.style = "height: 80%;";
	wrapper.append(textarea);
	const footer = document.createElement("footer");
	footer.style = "display: grid; grid-template-columns: repeat(2, 1fr); grid-template-rows: repeat(2, 1fr); gap: 0px; height: 20%; padding: 0px;";
	wrapper.append(footer);
	{
		const button = document.createElement("button");
		button.type = "button";
		button.textContent = "ÂÜçÊé°Áï™";
		button.addEventListener("click", () => {
			const strs = textarea.value.split("\n");
			const newstrs = strs.map((str, index) => {
				return str.replace(/^\d+/, `${index + 1}`);
			});
			textarea.value = newstrs.join("\n");
		});
		footer.append(button);
	}
	{
		const button = document.createElement("button");
		button.type = "button";
		button.textContent = "„Ç´„Çπ„Çø„É†‰∏ãË¶ã";
		button.addEventListener("click", () => {
			const arr = [...textarea.value.matchAll(/\d+x\d+\/\d+/g)];
			if(!arr){
				alert("„Ç´„Çπ„Çø„É†„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ");
				return;
			}
/*
			for(let i = 0; i < arr.length; i++){
				const mat = arr[i];
				setTimeout(() => {
					window.open(`https://minesweeper.online/ja/start/${mat[0]}`, "_blank");
				}, 1000);
			}
*/
			const size = window.prompt("„Ç´„Çπ„Çø„É†„ÅÆ„Çµ„Ç§„Ç∫„Çí„Ç≥„Éî„Éö„Åó„Å¶„Å≠\n‰æãÔºö100x100/2183", arr[0][0]);
			if(size){
				window.open(`https://minesweeper.online/ja/start/${size}`, "_blank")
			}
		});
		footer.append(button);
	}
	{
		const button = document.createElement("button");
		button.type = "button";
		button.textContent = "„Ç≥„Éî„Éº„Åó„Å¶„Åä„Çè„Çã";
		button.style = "grid-column: span 2 / span 2;";
		button.addEventListener("click", () => {
			textarea.select();
			document.execCommand("copy");
	/*
			window.getSelection?.().removeAllRanges();
			textarea.blur();
	*/
			wrapper.remove();
		});
		footer.append(button);
	}
}

})();


